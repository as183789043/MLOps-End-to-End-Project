name: Test Code and Model

on: [push]


permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  # test_model:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python
  #       uses: actions/setup-python@v5.2.0
  #       with:
  #         python-version: 3.11
  #         cache: 'pip'
  #     - name: Display Python version
  #       run: python -c "import sys; print(sys.version)"

  #     - name: Pip install
  #       run : pip install  -r requirements.txt


  #     - name: Pull data
  #       run: |
  #         dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_ACCESS_KEY_ID }}
  #         dvc remote modify origin --local secret_access_key ${{ secrets.DAGSHUB_SECRET_ACCESS_KEY }}
  #         dvc pull -r origin data/ models/

  #     - name: Pytest process and train model
  #       run: |
  #         pytest ./training/tests

  #     - name: Generate predict-diff.html artifact  by train model
  #       uses: actions/upload-artifact@v4.4.3
  #       with:
  #         path: predict-diff.html

  #     - name: Save model to BentoML local store
  #       run: python3 application/src/save_model_to_bentoml.py
        

  #     - name: Serve the app locally and run app tests to build image
  #       run: |
  #         bentoml serve application.src.create_service:employee_churn  & 
  #         sleep 10
  #         pytest application/tests
  #         kill -9 `lsof -i:3000 -t`
  #         bentoml build


  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}
      
  #     - name: Generate Model API Image
  #       run: |
  #         bentoml containerize employee_churn:latest -t ${{ secrets.DOCKER_USERNAME }}/employee_churn:latest
  #         docker push ${{ secrets.DOCKER_USERNAME }}/employee_churn:latest


  Deploy_to_Gcloud:
    # needs: test_model
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
        
      - name: Pull Docker image
        run: docker pull rickhsu1999/employee_churn:latest
  
      - name: Get image SHA
        id: get_sha
        run: |
          IMAGE_SHA=$(docker inspect --format='{{index .RepoDigests 0}}' rickhsu1999/employee_churn:latest)
          echo "Image SHA: $IMAGE_SHA"



      - uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}
  
      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'employee-churn-1'
          image: 'rickhsu1999/employee_churn:latest@$IMAGE_SHA'
          project_id: 'ornate-apricot-353301'
          region: 'asia-east1'  
          

  
      - name: 'Use output'
        run: 'curl "${{ steps.deploy.outputs.url }}"'
        

        

        
